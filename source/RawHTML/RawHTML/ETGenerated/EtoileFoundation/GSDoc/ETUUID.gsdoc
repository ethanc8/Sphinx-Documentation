<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="ETUUID">
  <head>
    <title>ETUUID class documentation</title>
    <author name="Generated by pi"></author>
    <copy>
      2007 David Chisnall, Quentin Mathe, Eric Wasylishen
    </copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the ETUUID class
      </heading>
      <class name="ETUUID" super="NSObject">
        <declared>ETUUID.h</declared>
        <conform>NSCopying</conform>
        <desc>
          <p>
            @group UUID @abstract An implementation of the
            <uref url="http://en.wikipedia.org/wiki/Universally_unique_identifier">Universally Unique Identifier</uref> standard.
          </p>
          <p>
            When an ETUUID is instantiated, the underlying UUID is
            generated with the version 4 (aka random)
            generation scheme. <br /> Take note the random
            scheme used on Linux and BSD platforms is based on a
            strong random number, unlike other platforms where a
            simpler random scheme is used. Which means
            collisions can occur on these platforms if you
            try to generate ETUUID in a tight loop.
          </p>
          <p>
            You can use
            <ref type="method" id="-isEqual:">
              -isEqual:
            </ref>
            to check the equality between two ETUUID instances.
          </p>
          <p>
            ETUUID does not have a designated initializer.
          </p>
        </desc>
        <method type="id" factory="yes">
          <sel>UUID</sel>
          <desc>
            <p>
              @taskunit Initialization
            </p>
            <p>
              Returns a new autoreleased UUID object
              initialized with a random 128-bit binary
              value.
            </p>
          </desc>
        </method>
        <method type="ETUUID*" factory="yes">
          <sel>UUIDWithData:</sel>
          <arg type="NSData*">aData</arg>
          <desc>
            <p>
              Returns an autoreleased UUID object for the given
              16-byte NSData.
            </p>
          </desc>
        </method>
        <method type="id" factory="yes">
          <sel>UUIDWithString:</sel>
          <arg type="NSString*">aString</arg>
          <desc>
            <p>
              Returns an autoreleased UUID object for the given
              UUID string representation.
            </p>
          </desc>
        </method>
        <method type="const unsigned char*">
          <sel>UUIDValue</sel>
          <desc>
            <p>
              Returns a 128-bit binary value representation of
              the receiver.
            </p>
          </desc>
        </method>
        <method type="NSData*">
          <sel>dataValue</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id">
          <sel>init</sel>
          <desc>
            <p>
              Initializes a UUID object by generating a
              random 128-bit binary value.
            </p>
          </desc>
        </method>
        <method type="id">
          <sel>initWithString:</sel>
          <arg type="NSString*">aString</arg>
          <desc>
            <p>
              Initializes the UUID object from a string
              representation.
            </p>
          </desc>
        </method>
        <method type="id">
          <sel>initWithUUID:</sel>
          <arg type="const unsigned char*">aUUID</arg>
          <desc>
            <p>
              Initializes the UUID object with a 128-bit
              binary value.
            </p>
          </desc>
        </method>
        <method type="NSString*">
          <sel>stringValue</sel>
          <desc>
            <p>
              @taskunit Alternative Representations
            </p>
            <p>
              Returns a string representation of the receiver.
            </p>
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSString(ETUUID)
        category
      </heading>
      <category name="ETUUID" class="NSString">
        <declared>ETUUID.h</declared>
        <desc>
          <p>
            @group UUID @abstract UUID related additions to
            NSString.
          </p>
        </desc>
        <method type="NSString*" factory="yes">
          <sel>UUIDString</sel>
          <desc>
            <p>
              Returns an autoreleased UUID string
              representation (see ETUUID).
            </p>
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSUserDefaults(ETUUID)
        category
      </heading>
      <category name="ETUUID" class="NSUserDefaults">
        <declared>ETUUID.h</declared>
        <desc>
          <p>
            @group UUID @abstract Conveniency methods to easily
            read and write UUIDs in the default database.
          </p>
        </desc>
        <method type="ETUUID*">
          <sel>UUIDForKey:</sel>
          <arg type="NSString*">aKey</arg>
          <desc>
            <p>
              Returns an autoreleased UUID object if the value
              for <var>aKey</var> is an UUID string representation,
              otherwise returns <code>nil</code>.
            </p>
            <p>
              Also returns <code>nil</code> if <var>aKey</var>
              doesn't exist.
            </p>
          </desc>
        </method>
        <method type="void">
          <sel>setUUID:</sel>
          <arg type="ETUUID*">aUUID</arg>
          <sel>forKey:</sel>
          <arg type="NSString*">aKey</arg>
          <desc>
            <p>
              Sets the value as the string representation of
              <var>aUUID</var> for <var>aKey</var>.
            </p>
          </desc>
        </method>
      </category>
    </chapter>
  </body>
</gsdoc>
