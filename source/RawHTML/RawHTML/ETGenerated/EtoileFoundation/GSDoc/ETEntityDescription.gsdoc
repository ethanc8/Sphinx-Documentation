<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="ETEntityDescription">
  <head>
    <title>ETEntityDescription documentation</title>
    <author name="Generated by pi"></author>
    <copy>2009 Eric Wasylishen, Quentin Mathe</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the
        ETCPrimitiveEntityDescription
        class
      </heading>
      <class name="ETCPrimitiveEntityDescription" super="ETPrimitiveEntityDescription">
        <declared>ETEntityDescription.h</declared>
        <desc>
          <p>
            @group Metamodel @abstract A description of an
            entity bound to C attributes in the metamodel, and C
            values in the model.
          </p>
          <p>
            Used to describe the (meta)model C primitives:
            <strong>float</strong>, BOOL, etc. See
            -[ETEntityDescription isCPrimitive].
          </p>
          <p>
            This class is used internally. You can possibly use it
            to support new primitives.
          </p>
        </desc>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the ETEntityDescription
        class
      </heading>
      <class name="ETEntityDescription" super="ETModelElementDescription">
        <declared>ETEntityDescription.h</declared>
        <conform>ETCollection</conform>
        <conform>ETCollectionMutation</conform>
        <desc>
          <p>
            @group Metamodel @abstract A description of an
            entity, which can either be a class or a prototype.
          </p>
          <p>
            For an introduction, see ETModelElementDescription.
          </p>
          <p>
            @section Freezing
          </p>
          <p>
            If <ref type="method" id="-isFrozen">-isFrozen</ref> is
            <code>YES</code>, the entity description is largely
            immutable, you can only add or remove transient
            property descriptions with
            <ref type="method" id="-addPropertyDescription:">
              -addPropertyDescription:
            </ref>
            and
            <ref type="method" id="-removePropertyDescription">
              -removePropertyDescription
            </ref>
            .
          </p>
        </desc>
        <method type="ETEntityDescription*" factory="yes">
          <sel>newEntityDescription</sel>
          <desc>
            <p>
              @taskunit Metamodel Description
            </p>
            <p>
              Self-description (aka meta-metamodel).
            </p>
          </desc>
        </method>
        <method type="NSString*" factory="yes">
          <sel>rootEntityDescriptionName</sel>
          <desc>
            <p>
              The name of the entity description that should end
              the parent chain of every entity description.
            </p>
            <p>
              This entity description is the Object primitive in
              the repository. See ETModelDescriptionRepository.
            </p>
            <p>
              Will be used by
              <ref type="method" id="-checkConstraints:">
                -checkConstraints:
              </ref>
              .
            </p>
          </desc>
        </method>
        <method type="void">
          <sel>addPropertyDescription:</sel>
          <arg type="ETPropertyDescription*">propertyDescription</arg>
          <desc>
            <p>
              Adds the given property description to this entity,
              the entity becomes its owner.
            </p>
            <p>
              If <ref type="method" id="-isFrozen">-isFrozen</ref>
              is <code>YES</code>, this method can still be used to
              add a transient property description.
            </p>
          </desc>
        </method>
        <method type="BOOL">
          <sel>isKindOfEntity:</sel>
          <arg type="ETEntityDescription*">anEntityDesc</arg>
          <desc>
            <p>
              Returns whether the given entity is a subentity
              of the receiver.
            </p>
          </desc>
        </method>
        <method type="BOOL">
          <sel>isValidValue:</sel>
          <arg type="id">aValue</arg>
          <sel>type:</sel>
          <arg type="ETEntityDescription*">anEntityDesc</arg>
          <desc>
            <p>
              Checks the given value and its type against the
              receiver type, and returns whether the value
              type is a subtype of the receiver.
            </p>
            <p>
              This method doesn't execute any model validation as
              <ref type="method" id="-validateValue:forKey:">
                -validateValue:forKey:
              </ref>
              does.
            </p>
          </desc>
        </method>
        <method type="ETPropertyDescription*">
          <sel>propertyDescriptionForName:</sel>
          <arg type="NSString*">name</arg>
          <desc>
            <p>
              Returns the property description which matches
              the given <var>name</var>.
            </p>
            <p>
              See also
              <ref type="method" id="-propertyDescriptionsForNames:">
                -propertyDescriptionsForNames:
              </ref>
              and -[ETModelElementDescription <var>name</var>]
              which is inherited by ETPropertyDescription.
            </p>
          </desc>
        </method>
        <method type="NSArray*">
          <sel>propertyDescriptionsForNames:</sel>
          <arg type="NSArray*">names</arg>
          <desc>
            <p>
              Returns the property descriptions which matches
              the given <var>names</var>. See also
              <ref type="method" id="-propertyDescriptionForName:">
                -propertyDescriptionForName:
              </ref>
              and -[ETModelElementDescription name] which is
              inherited by ETPropertyDescription.
            </p>
          </desc>
        </method>
        <method type="void">
          <sel>removePropertyDescription:</sel>
          <arg type="ETPropertyDescription*">propertyDescription</arg>
          <desc>
            <p>
              Removes the given property description from this
              entity.
            </p>
          </desc>
        </method>
        <method type="ETValidationResult*">
          <sel>validateValue:</sel>
          <arg type="id">value</arg>
          <sel>forKey:</sel>
          <arg type="NSString*">key</arg>
          <desc>
            <p>
              @taskunit Validation and Runtime Consistency
              Check
            </p>
            <p>
              Tries to validate the <var>value</var> that
              corresponds to the given property name, by
              delegating the validation to the right
              property description, and returns a validation
              result object.
            </p>
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        ETPrimitiveEntityDescription class
      </heading>
      <class name="ETPrimitiveEntityDescription" super="ETEntityDescription">
        <declared>ETEntityDescription.h</declared>
        <desc>
          <p>
            @group Metamodel @abstract A description of an
            entity bound to attributes in the metamodel, and
            value objects in the model.
          </p>
          <p>
            Used to describe the (meta)model primitives: object,
            string, boolean etc. See -[ETEntityDescription
            isPrimitive].
          </p>
          <p>
            This class is used internally. You can possibly use it
            to support new primitives.
          </p>
        </desc>
      </class>
    </chapter>
  </body>
</gsdoc>
