<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="ETUTI">
  <head>
    <title>ETUTI class documentation</title>
    <author name="Generated by pi"></author>
    <copy>2009 Eric Wasylishen</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the ETUTI class
      </heading>
      <class name="ETUTI" super="NSObject">
        <declared>ETUTI.h</declared>
        <conform>NSCopying</conform>
        <desc>
          <p>
            @group Uniform Type Identifier @abstract A type
            class to represent data types and aggregate various
            type representations into a common type model (Uniform
            Type Identifier).
          </p>
          <p>
            ETUTI objects represent Uniform Type Identifiers
            (UTIs), strings written in reverse-DNS notation
            (e.g. <em>org.etoile.group</em>) which are used to
            describe data type. UTIs support multiple
            inheritance to indicate that certain types are
            refinements of one or more parent types.
          </p>
          <p>
            The ETUTI implementation also integrates with the
            Objective-C runtime. UTI's can be automatically
            generated for a given class, which are given the
            form <em>org.etoile-project.objc.class.ClassName</em>
          </p>
          <p>
            EtoileFoundation provides a built-in UTI
            library and some class bindings (UTI supertypes to
            which ObjC classes conforms to). See
            UTIDefinitions.plist and
            ClassBindings.plist in the
            EtoileFoundation framework resources.
          </p>
          <p>
            Additional UTIs and class bindings can be
            provided in third-party applications or
            frameworks. At launch time, ETUTI loads any
            UTIDefinitions.plist and
            ClassBindings.plist present in the main
            bundle and loaded frameworks, and merges the content
            into its runtime UTI database. You cannot redefine a
            UTI built into EtoileFoundation UTIDefinitions.plist.
          </p>
          <p>
            @section iOS Support
          </p>
          <p>
            EtoileFoundation UTIDefinitions.plist and
            UTIClassBindings.plist must be
            referenced by your application project, and
            bundled in the application with a Copy Files build
            phase where the subpath is a 'EtoileFoundation'
            subdirectory.
          </p>
          <p>
            A Copy Bundle Resources phase can follow to copy the
            additional UTIDefinitions.plist and
            UTIClassBindings.plist specific to
            your application.
          </p>
        </desc>
        <method type="ETUTI*" factory="yes">
          <sel>registerTypeWithString:</sel>
          <arg type="NSString*">aString</arg>
          <sel>description:</sel>
          <arg type="NSString*">description</arg>
          <sel>supertypeStrings:</sel>
          <arg type="NSArray*">supertypeNames</arg>
          <sel>typeTags:</sel>
          <arg type="NSDictionary*">tags</arg>
          <desc>
            <p>
              Registers a UTI in the UTI database. UTIs
              registered with this method are not currently
              persisted.
            </p>
            <p>
              A type tag dictionary can be passed to express how the
              UTI is mapped to other type identification models.
              EUTI currently supports two other type
              identification models: file extensions and
              MIME types. All MIME types and file extensions
              belongs to two tag classes (encoded as UTI),
              respectively kETUTITagClassMIMEType and
              kETUTITagClassFileExtension.
              Finally each entry in a type tag dictionary must
              be an array. Here is an example of a valid type tag
              dictionary:
            </p>
<example>
 [NSDictionary dictionaryWithObjectsAndKeys: 
  [NSArray arrayWithObject: @"image/tiff"], kETUTITagClassMIMEType,
  [NSArray arrayWithObjects: @"tif", @"tiff", nil], kETUTITagClassFileExtension, nil]
 </example>
            <p>
              See also
              <ref type="method" id="-fileExtensions">
                -fileExtensions
              </ref>
              and
              <ref type="method" id="-MIMETypes">
                -MIMETypes
              </ref>
              .
            </p>
          </desc>
        </method>
        <method type="void" factory="yes">
          <sel>registerTypesFromBundle:</sel>
          <arg type="NSBundle*">aBundle</arg>
          <desc>
            <p>
              Registers additional UTIs and class bindings in
              the UTI database by loading any UTIDefinitions.plist
              and ClassBindings.plist present in the bundle
              resources directory.
            </p>
            <p>
              UTIs and class bindings registered with this method
              are not persisted.
            </p>
          </desc>
        </method>
        <method type="ETUTI*" factory="yes">
          <sel>transientTypeWithSupertypeStrings:</sel>
          <arg type="NSArray*">supertypeNames</arg>
          <desc>
            <p>
              Returns a "transient" or anonymous ETUTI object
              based on the given UTI string representations as
              supertypes.
            </p>
            <p>
              Useful in combination with conformsToUTI: for
              checking whether an unknown UTI conforms to any
              UTI in a set (the supertypes specified for the
              transient UTI.)
            </p>
          </desc>
        </method>
        <method type="ETUTI*" factory="yes">
          <sel>transientTypeWithSupertypes:</sel>
          <arg type="NSArray*">supertypes</arg>
          <desc>
            <p>
              Returns a "transient" or anonymous ETUTI object
              based on the given UTI objects as
              <var>supertypes</var>.
            </p>
            <p>
              See also
              <ref type="method" id="+transientTypeWithSupertypeStrings:">+transientTypeWithSupertypeStrings:</ref>
            </p>
          </desc>
        </method>
        <method type="ETUTI*" factory="yes">
          <sel>typeWithClass:</sel>
          <arg type="Class">aClass</arg>
          <desc>
            <p>
              Returns an ETUTI object representing the given
              class. Calling
              <ref type="method" id="-supertypes">
                -supertypes
              </ref>
              will return a UTI representing the superclass of the
              class, in addition to any supertypes specified for
              the class in UTIDefinitions.plist.
            </p>
            <p>
              Note that it is not necessary to list Objective-C
              classes in UTIDefinitons.plist; ETUTI objects for
              ObjC classes are created dynamically, but
              UTIDefinitions.plist can be used to
              add supplemental supertypes.
            </p>
          </desc>
        </method>
        <method type="ETUTI*" factory="yes">
          <sel>typeWithFileExtension:</sel>
          <arg type="NSString*">anExtension</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="ETUTI*" factory="yes">
          <sel>typeWithMIMEType:</sel>
          <arg type="NSString*">aMIME</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="ETUTI*" factory="yes">
          <sel>typeWithPath:</sel>
          <arg type="NSString*">aPath</arg>
          <desc>
            <p>
              Returns an ETUTI object representing the type of
              the file located at the specified local path.
            </p>
          </desc>
        </method>
        <method type="ETUTI*" factory="yes">
          <sel>typeWithString:</sel>
          <arg type="NSString*">aString</arg>
          <desc>
            <p>
              @taskunit Initialization
            </p>
            <p>
              Returns an ETUTI object for the given UTI string
              (e.g. <em>public.audio</em>). The given UTI string
              must either:
            </p>
            <list>
              <item>be in the UTIDefinitions.plist file</item>
              <item>
                or have been registered with the
                registertypeWithString:description:supertypes:
                method
              </item>
              <item>
                or be a UTI of the form
                <em>org.etoile-project.objc.class.ClassName</em>
                where ClassName is a valid Objective-C class
              </item>
            </list>
            <p>
              Otherwise, <code>nil</code> is returned.
            </p>
          </desc>
        </method>
        <method type="NSArray*">
          <sel>MIMETypes</sel>
          <desc>
            <p>
              Returns an array of MIME types which refer to the
              same data type as the receiver.
            </p>
          </desc>
        </method>
        <method type="NSArray*">
          <sel>allSubtypes</sel>
          <desc>
            <p>
              Returns all known UTI objects which conform to
              the receiver.
            </p>
          </desc>
        </method>
        <method type="NSArray*">
          <sel>allSupertypes</sel>
          <desc>
            <p>
              Returns all known UTI objects which are
              supertypes of the receiver (all UTIs which the
              receiver conforms to).
            </p>
            <p>
              The immediate supertypes comes first in the returned
              array. <br /> Types higher in the hierarchy
              follow. The ordering among the supertypes beside
              the immediate supertypes is undetermined (due to
              multiple inheritance).
            </p>
          </desc>
        </method>
        <method type="Class">
          <sel>classValue</sel>
          <desc>
            <p>
              Returns the ObjC class the UTI represents, or Nil
              if the UTI does not represent a class registered in
              the runtime.
            </p>
            <p>
              See also
              <ref type="method" id="+typeWithClass:">
                +typeWithClass:
              </ref>
              .
            </p>
          </desc>
        </method>
        <method type="BOOL">
          <sel>conformsToType:</sel>
          <arg type="ETUTI*">aType</arg>
          <desc>
            <p>
              @taskunit Type Conformance
            </p>
            <p>
              Tests whether or not the receiver conforms to
              <var>aType</var> (i.e. <var>aType</var> is a
              supertype of the receiver, possibly many levels
              away).
            </p>
          </desc>
        </method>
        <method type="NSArray*">
          <sel>fileExtensions</sel>
          <desc>
            <p>
              Returns an array of file extensions (if any)
              which refer to the same data type as the receiver.
            </p>
          </desc>
        </method>
        <method type="NSString*">
          <sel>stringValue</sel>
          <desc>
            <p>
              @taskunit Type Representations and Informations
            </p>
            <p>
              Returns the string representation of the UTI
              (e.g. <em>public.audio</em>).
            </p>
          </desc>
        </method>
        <method type="NSArray*">
          <sel>subtypes</sel>
          <desc>
            <p>
              Returns the UTI objects which have the receiver
              as an immediate supertype.
            </p>
          </desc>
        </method>
        <method type="NSArray*">
          <sel>supertypes</sel>
          <desc>
            <p>
              @taskunit Type Inheritance
            </p>
            <p>
              Returns the UTI objects which are immediate
              supertypes of the receiver.
            </p>
          </desc>
        </method>
        <method type="NSString*">
          <sel>typeDescription</sel>
          <desc>
            <p>
              Returns a natural language description of the
              receiver.
            </p>
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>ETUTI constants</heading>
      <p></p>
      <constant type="NSString* const" name="kETUTITagClassFileExtension">
        <desc>
          <p>
            Key to identify the file extension array in a type tag
            dictionary.
          </p>
        </desc>
      </constant>
      <constant type="NSString* const" name="kETUTITagClassMIMEType">
        <desc>
          <p>
            Key to identify the MIME type string array in a type
            tag dictionary.
          </p>
        </desc>
      </constant>
    </chapter>
  </body>
</gsdoc>
