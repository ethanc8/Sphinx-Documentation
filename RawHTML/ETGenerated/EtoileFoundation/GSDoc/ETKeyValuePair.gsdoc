<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="ETKeyValuePair">
  <head>
    <title>ETKeyValuePair class documentation</title>
    <author name="Generated by pi"></author>
    <copy>2010 Quentin Mathe</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the ETKeyValuePair class
      </heading>
      <class name="ETKeyValuePair" super="NSObject">
        <declared>ETKeyValuePair.h</declared>
        <conform>NSCopying</conform>
        <conform>ETViewpoint</conform>
        <desc>
          <p>
            @group Collection Additions @abstract A key/value
            association.
          </p>
          <p>
            Key value pairs are used by EtoileUI to present and
            interact with keyed data structures.
          </p>
          <p>
            If you put them in an array, the resulting data
            structure is roughly equivalent to an ordered
            dictionary or a multi-value collection.
          </p>
          <p>
            For now, ETKeyValuePair doesn't support subclassing.
          </p>
        </desc>
        <method type="id" factory="yes">
          <sel>pairWithKey:</sel>
          <arg type="NSString*">aKey</arg>
          <sel>value:</sel>
          <arg type="id">aValue</arg>
          <desc>
            <p>
              @taskunit Initialization
            </p>
            <p>
              Returns a new autoreleased pair with the given
              key and value.
            </p>
            <p>
              Returns a new autoreleased pair with the given
              key and value.
            </p>
          </desc>
        </method>
        <method type="NSString*">
          <sel>displayName</sel>
          <desc>
            <p>
              @taskunit UI Presentation
            </p>
            <p>
              Returns the key.
            </p>
            <p>
              Returns the key.
            </p>
          </desc>
        </method>
        <method type="id" init="yes">
          <sel>initWithKey:</sel>
          <arg type="NSString*">aKey</arg>
          <sel>value:</sel>
          <arg type="id">aValue</arg>
          <desc>
            <p>
              Initializes and returns a new pair with the
              given key and value.
            </p>
          </desc>
        </method>
        <method type="BOOL">
          <sel>isKeyValuePair</sel>
          <desc>
            <p>
              @taskunit Type Querying
            </p>
            <p>
              Returns <code>YES</code>.
            </p>
            <p>
              Returns <code>YES</code>.
            </p>
          </desc>
        </method>
        <method type="NSString*">
          <sel>key</sel>
          <desc>
            <p>
              @taskunit Controlling the Represented Element
            </p>
            <p>
              Returns the pair identifier.
            </p>
            <p>
              Returns the pair identifier.
            </p>
          </desc>
        </method>
        <method type="NSSet*">
          <sel>observableKeyPaths</sel>
          <desc>
            <p>
              @taskunit Observing Changes From Other Objects
            </p>
            <p>
              Returns <em>displayName</em>, <em>key</em>,
              <em>value</em> and <em>representedObject</em>.
            </p>
            <p>
              Returns <em>displayName</em>, <em>key</em>,
              <em>value</em> and <em>representedObject</em>.
            </p>
          </desc>
        </method>
        <method type="NSArray*">
          <sel>propertyNames</sel>
          <desc>
            <p>
              @taskunit Property-Value Coding
            </p>
            <p>
              Exposes <em>key</em> and <em>value</em> in
              addition to the inherited properties.
            </p>
            <p>
              Exposes <em>key</em> and <em>value</em> in
              addition to the inherited properties.
            </p>
          </desc>
        </method>
        <method type="id">
          <sel>representedObject</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void">
          <sel>setKey:</sel>
          <arg type="NSString*">aKey</arg>
          <desc>
            <p>
              Sets the pair identifier.
            </p>
          </desc>
        </method>
        <method type="void">
          <sel>setRepresentedObject:</sel>
          <arg type="id">anObject</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void">
          <sel>setValue:</sel>
          <arg type="id">aValue</arg>
          <desc>
            <p>
              Sets the pair content.
            </p>
          </desc>
        </method>
        <method type="id">
          <sel>value</sel>
          <desc>
            <p>
              @taskunit Accessing the Represented Element
            </p>
            <p>
              Returns the pair content.
            </p>
            <p>
              Returns the pair content.
            </p>
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSArray(ETKeyValuePairRepresentation)
        category
      </heading>
      <category name="ETKeyValuePairRepresentation" class="NSArray">
        <declared>ETKeyValuePair.h</declared>
        <desc>
          <p>
            @group Collection Additions @abstract
            ETKeyValuePair-related extensions to
            NSArray.
          </p>
        </desc>
        <method type="NSDictionary*">
          <sel>dictionaryRepresentation</sel>
          <desc>
            <p>
              Returns a dictionary where every ETKeyValuePair
              present in the array is turned into a key/value
              entry.
            </p>
            <p>
              For every other object, its index in the array
              becomes its key in the dictionary.
            </p>
            <p>
              The returned dictionary is autoreleased.
            </p>
            <p>
              Raises an NSGenericException when the receiver
              contains an object which is not an
              ETKeyValuePair object.
            </p>
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSObject(ETKeyValuePair) category
      </heading>
      <category name="ETKeyValuePair" class="NSObject">
        <declared>ETKeyValuePair.h</declared>
        <desc>
          <p>
            @group Collection Additions @abstract
            ETKeyValuePair-related extensions to
            NSObject.
          </p>
        </desc>
        <method type="BOOL">
          <sel>isKeyValuePair</sel>
          <desc>
            <p>
              Returns whether the receiver is a ETKeyValuePair
              instance.
            </p>
          </desc>
        </method>
      </category>
    </chapter>
  </body>
</gsdoc>
