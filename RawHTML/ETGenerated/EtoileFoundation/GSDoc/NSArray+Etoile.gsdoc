<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSArray+Etoile">
  <head>
    <title>NSArray+Etoile documentation</title>
    <author name="Generated by pi"></author>
    <copy>2007 Quentin Mathe</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSArray(Etoile)
        category
      </heading>
      <category name="Etoile" class="NSArray">
        <declared>NSArray+Etoile.h</declared>
        <desc>
          <p>
            @group Collection Additions @abstract Additions to
            NSArray.
          </p>
        </desc>
        <method type="NSArray*">
          <sel>arrayByRemovingObject:</sel>
          <arg type="id">anObject</arg>
          <desc>
            <p>
              Returns a new array by copying the receiver and
              removing the objects equal to the given one.
            </p>
          </desc>
        </method>
        <method type="NSArray*">
          <sel>arrayByRemovingObjectsInArray:</sel>
          <arg type="NSArray*">anArray</arg>
          <desc>
            <p>
              Returns a new array by copying the receiver and
              removing the objects equal to those contained in
              the given array.
            </p>
          </desc>
        </method>
        <method type="NSArray*">
          <sel>filteredArrayUsingPredicate:</sel>
          <arg type="NSPredicate*">aPredicate</arg>
          <sel>ignoringObjects:</sel>
          <arg type="NSSet*">ignoredObjects</arg>
          <desc>
            <p>
              Returns a filtered array as
              <ref type="method" id="-filteredArrayWithPredicate:">
                -filteredArrayWithPredicate:
              </ref>
              does but always includes in the new array the given
              objects to be ignored by the filtering.
            </p>
          </desc>
        </method>
        <method type="id">
          <sel>firstObject</sel>
          <desc>
            <p>
              Returns the first object in the array, otherwise
              returns <code>nil</code> if the array is empty.
            </p>
          </desc>
        </method>
        <method type="id">
          <sel>firstObjectMatchingValue:</sel>
          <arg type="id">value</arg>
          <sel>forKey:</sel>
          <arg type="NSString*">key</arg>
          <desc>
            <p>
              <strong>Deprecated</strong>
            </p>
            <p>
              Same as the
              <ref type="method" id="-objectsMatchingValue:forKey:">
                -objectsMatchingValue:forKey:
              </ref>
              , except it returns the first object that matches the
              receiver.
            </p>
            <p>
              Nil is returned when no object can be matched.
            </p>
          </desc>
        </method>
        <method type="NSArray*">
          <sel>objectsMatchingValue:</sel>
          <arg type="id">value</arg>
          <sel>forKey:</sel>
          <arg type="NSString*">key</arg>
          <desc>
            <p>
              @taskunit Deprecated
            </p>
            <p>
              <strong>Deprecated</strong>
            </p>
            <p>
              Returns the objects on which
              <ref type="method" id="-valueForKey:">
                -valueForKey:
              </ref>
              returns a <var>value</var> that matches the given
              one.
            </p>
            <p>
              For every object in the receiver,
              <ref type="method" id="-valueForKey:">
                -valueForKey:
              </ref>
              will be invoked with the given <var>key</var>.
            </p>
<example>
NSArray *personsNamedJohn = [persons objectsMatchingValue: @"John" forKey: @"name"];
</example>
            <p>
              You should now use
              <ref type="method" id="-filteredArrayUsingPredicate">
                -filteredArrayUsingPredicate
              </ref>
              or <ref type="method" id="-filter">-filter</ref>
              instead. For example:
            </p>
<example>
NSArray *personsNamedJohn = [persons filteredArrayUsingPredicate: 
    [NSPredicate predicateWithFormat: @"name == %@", @"John"]];
</example>
            <br />
            <p>
              <strong>Deprecated</strong>
            </p>
            <p>
              Returns the objects on which
              <ref type="method" id="-valueForKey:">
                -valueForKey:
              </ref>
              returns a <var>value</var> that matches the given
              one.
            </p>
            <p>
              For every object in the receiver,
              <ref type="method" id="-valueForKey:">
                -valueForKey:
              </ref>
              will be invoked with the given <var>key</var>.
            </p>
<example>
NSArray *personsNamedJohn = [persons objectsMatchingValue: @"John" forKey: @"name"];
</example>
            <p>
              You should now use
              <ref type="method" id="-filteredArrayUsingPredicate">
                -filteredArrayUsingPredicate
              </ref>
              or <ref type="method" id="-filter">-filter</ref>
              instead. For example:
            </p>
<example>
NSArray *personsNamedJohn = [persons filteredArrayUsingPredicate: 
    [NSPredicate predicateWithFormat: @"name == %@", @"John"]];
</example>
          </desc>
        </method>
        <method type="NSArray*">
          <sel>subarrayFromIndex:</sel>
          <arg type="NSUInteger">anIndex</arg>
          <desc>
            <p>
              Returns a new array containing the objects
              between the given index and the end of the array.
            </p>
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the NSMutableArray(Etoile)
        category
      </heading>
      <category name="Etoile" class="NSMutableArray">
        <declared>NSArray+Etoile.h</declared>
        <desc>
          <p>
            @group Collection Additions @abstract Additions to
            NSMutableArray.
          </p>
        </desc>
        <method type="void">
          <sel>removeObjectsFromIndex:</sel>
          <arg type="NSUInteger">anIndex</arg>
          <desc>
            <p>
              Removes the objects located between
              <var>anIndex</var> and the end of the array.
            </p>
            <p>
              The object located at <var>anIndex</var> is included
              in the removed objects.
            </p>
          </desc>
        </method>
      </category>
    </chapter>
  </body>
</gsdoc>
