<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="ETHistory">
  <head>
    <title>ETHistory class documentation</title>
    <author name="Generated by pi"></author>
    <copy>2008 Truls Becken</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the ETHistory class
      </heading>
      <class name="ETHistory" super="NSObject">
        <declared>ETHistory.h</declared>
        <conform>ETCollection</conform>
        <desc>
          <p>
            @group Collection Additions @abstract A generic
            history class which can contain arbitary entries
            located in the past or the future.
          </p>
          <p>
            ETHistory keeps a history of objects of some
            kind. After going back in time, it can go forward
            again towards the most recent object. Adding an
            object while at a historic point will discard the
            forward history.
          </p>
          <p>
            It is also possible to give ETHistory an NSEnumerator to
            use as a lazy source for the forward history. This way,
            a collection of objects can be added as a "future",
            replacing the current forward history.
          </p>
          <p>
            ETHistory supports ETCollection protocol, but not
            ETCollectionMutation which means
            -[NSObject isMutableCollection] returns
            <code>NO</code> and an history won't be considered
            as a mutable represented object by EtoileUI.
          </p>
        </desc>
        <method type="id" factory="yes">
          <sel>history</sel>
          <desc>
            <p>
              Return a new autoreleased history.
            </p>
          </desc>
        </method>
        <method type="void">
          <sel>addObject:</sel>
          <arg type="id">object</arg>
          <desc>
            <p>
              Set new current <var>object</var>, discarding the
              forward history.
            </p>
          </desc>
        </method>
        <method type="void">
          <sel>back</sel>
          <desc>
            <p>
              Go one step back if possible.
            </p>
          </desc>
        </method>
        <method type="void">
          <sel>clear</sel>
          <desc>
            <p>
              Forget the history and discard the future.
            </p>
          </desc>
        </method>
        <method type="id">
          <sel>currentObject</sel>
          <desc>
            <p>
              Return the current object.
            </p>
          </desc>
        </method>
        <method type="NSString*">
          <sel>displayName</sel>
          <desc>
            <p>
              Return 'History'.
            </p>
            <p>
              See also -[NSObject displayName].
            </p>
          </desc>
        </method>
        <method type="void">
          <sel>forward</sel>
          <desc>
            <p>
              After going back, call this to go one step forward
              again.
            </p>
          </desc>
        </method>
        <method type="BOOL">
          <sel>hasNext</sel>
          <desc>
            <p>
              Return <code>YES</code> if it is possible to go
              forward.
            </p>
          </desc>
        </method>
        <method type="BOOL">
          <sel>hasPrevious</sel>
          <desc>
            <p>
              Return <code>YES</code> if it is possible to go
              back.
            </p>
          </desc>
        </method>
        <method type="id" init="yes">
          <sel>init</sel>
          <desc>
            <p>
              Initialize the history.
            </p>
          </desc>
        </method>
        <method type="BOOL">
          <sel>isOrdered</sel>
          <desc>
            <p>
              Returns <code>YES</code>.
            </p>
          </desc>
        </method>
        <method type="int">
          <sel>maxHistorySize</sel>
          <desc>
            <p>
              Return the maximum number of objects to remember.
            </p>
          </desc>
        </method>
        <method type="id">
          <sel>nextObject</sel>
          <desc>
            <p>
              Go forward, and return the new current object or
              <code>nil</code> if already at the end.
            </p>
          </desc>
        </method>
        <method type="id">
          <sel>peek:</sel>
          <arg type="int">relativeIndex</arg>
          <desc>
            <p>
              Return an object at a position relative to the
              current object. Return <code>nil</code> if the
              index refers to a point before the beginning or
              after the end of time.
            </p>
          </desc>
        </method>
        <method type="id">
          <sel>previousObject</sel>
          <desc>
            <p>
              Go back, and return the new current object or
              <code>nil</code> if already at the start.
            </p>
          </desc>
        </method>
        <method type="void">
          <sel>setFuture:</sel>
          <arg type="NSEnumerator*">enumerator</arg>
          <desc>
            <p>
              Set an <var>enumerator</var> to use as the forward
              history, discarding everything after the current
              object.
            </p>
          </desc>
        </method>
        <method type="void">
          <sel>setMaxHistorySize:</sel>
          <arg type="int">maxSize</arg>
          <desc>
            <p>
              Set the maximum number of objects to remember. When
              more objects than this are added, the oldest ones
              are forgotten.
            </p>
            <p>
              The default is to remember an unlimited number of
              objects (max size = 0).
            </p>
            <p>
              Note that max size only limits the number of objects
              before
              <ref type="method" id="-currentObject">
                -currentObject
              </ref>
              . Setting a future and peeking into it may force the
              history to temporarily hold more objects.
            </p>
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
