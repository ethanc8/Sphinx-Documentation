<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="ETViewpoint">
  <head>
    <title>ETViewpointTrait class documentation</title>
    <author name="Generated by pi"></author>
    <copy>2007 Quentin Mathe</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the ETViewpointTrait class
      </heading>
      <class name="ETViewpointTrait" super="NSObject">
        <declared>ETViewpoint.h</declared>
        <conform>ETViewpoint</conform>
        <desc>
          <p>
            @group Viewpoints @abstract A basic and reusable
            ETViewpoint protocol implementation.
          </p>
          <p>
            If you implement a class that conforms to ETViewpoint,
            the core implementation of the protocol is usually the
            same. You can adopt this trait to get all the basic
            viewpoint behavior without writing code, and just
            implement or reimplement the parts that matter.
          </p>
          <p>
            For example, ETMutableObjectViewpoint uses this trait.
          </p>
        </desc>
        <method type="void">
          <sel>applyMutableViewpointTraitForValue:</sel>
          <arg type="id">aValue</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL">
          <sel>isMutableValue</sel>
          <desc>
            <p>
              @taskunit Mutability Trait
            </p>
          </desc>
        </method>
        <method type="BOOL">
          <sel>isViewpoint</sel>
          <desc>
            <p>
              Returns <code>YES</code>.
            </p>
          </desc>
        </method>
        <method type="void">
          <sel>unapplyMutableViewpointTraitForValue:</sel>
          <arg type="id">aValue</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        NSObject(ETViewpointAdditions)
        informal protocol
      </heading>
      <category name="ETViewpointAdditions" class="NSObject">
        <declared>ETViewpoint.h</declared>
        <desc>
          <p>
            @group Viewpoints @abstract A mechanism to access a
            represented collection when a viewpoint content
            is another viewpoint.
          </p>
          <p>
            This is an unstable API (will probably be removed or
            changed later).
          </p>
        </desc>
        <method type="BOOL">
          <sel>isViewpoint</sel>
          <desc>
            <p>
              Returns <code>NO</code>.
            </p>
          </desc>
        </method>
        <method type="void">
          <sel>setValue:</sel>
          <arg type="id">aValue</arg>
          <sel>forContentKey:</sel>
          <arg type="NSString*">key</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void">
          <sel>setValue:</sel>
          <arg type="id">aValue</arg>
          <sel>forContentKeyPath:</sel>
          <arg type="NSString*">aKeyPath</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id">
          <sel>valueForContentKey:</sel>
          <arg type="NSString*">key</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id">
          <sel>valueForContentKeyPath:</sel>
          <arg type="NSString*">aKeyPath</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
      </category>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the ETPropertyViewpoint
        protocol
      </heading>
      <protocol name="ETPropertyViewpoint">
        <declared>ETViewpoint.h</declared>
        <conform>ETViewpoint</conform>
        <desc>
          <p>
            @group Viewpoints @abstract A viewpoint protocol to
            represent an object property.
          </p>
          <p>
            A property viewpoint is an adaptor that represents an
            object property and handles reading and writing the
            property value through
            <ref type="method" id="-value">
              -value
            </ref>
            and <ref type="method" id="-setValue">-setValue</ref>.
          </p>
        </desc>
        <method type="id" factory="yes">
          <sel>viewpointWithName:</sel>
          <arg type="NSString*">key</arg>
          <sel>representedObject:</sel>
          <arg type="id">object</arg>
          <desc>
            <p>
              Returns a new autoreleased property viewpoint
              that represents the property identified by the given
              name in <var>object</var>.
            </p>
          </desc>
        </method>
        <method type="NSString*">
          <sel>name</sel>
          <desc>
            <p>
              Returns the name used to declare the property in
              the represented object.
            </p>
          </desc>
        </method>
      </protocol>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the ETViewpoint protocol
      </heading>
      <protocol name="ETViewpoint">
        <declared>ETViewpoint.h</declared>
        <desc>
          <p>
            @group Viewpoints @abstract The base viewpoint
            protocol.
          </p>
          <p>
            A viewpoint is an adaptor that exposes a value derived
            from a represented object and handles reading and
            writing the properties of this value through
            <ref type="method" id="-valueForProperty:">
              -valueForProperty:
            </ref>
            and
            <ref type="method" id="-setValue:forProperty:">
              -setValue:forProperty:
            </ref>
            .
          </p>
          <p>
            The derived value object can be read and write through
            <ref type="method" id="-value">
              -value
            </ref>
            and <ref type="method" id="-setValue:">-setValue:</ref>
            .
          </p>
        </desc>
        <method type="void">
          <sel>applyMutableViewpointTraitForValue:</sel>
          <arg type="id">aValue</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="BOOL">
          <sel>isMutableValue</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="NSArray*">
          <sel>propertyNames</sel>
          <desc>
            <p>
              Returns the property names exposed through by the
              viewpoint for
              <ref type="method" id="-value">
                -value
              </ref>
              .
            </p>
          </desc>
        </method>
        <method type="id">
          <sel>representedObject</sel>
          <desc>
            <p>
              Returns the adapted object.
            </p>
          </desc>
        </method>
        <method type="void">
          <sel>setRepresentedObject:</sel>
          <arg type="id">object</arg>
          <desc>
            <p>
              Sets the adapted <var>object</var>.
            </p>
          </desc>
        </method>
        <method type="void">
          <sel>setValue:</sel>
          <arg type="id">objectValue</arg>
          <desc>
            <p>
              Sets the object value resulting from the viewpoint.
            </p>
          </desc>
        </method>
        <method type="BOOL">
          <sel>setValue:</sel>
          <arg type="id">value</arg>
          <sel>forProperty:</sel>
          <arg type="NSString*">key</arg>
          <desc>
            <p>
              Sets the <var>value</var> bound to a property of the
              object <ref type="method" id="-value">-value</ref>
              .
            </p>
          </desc>
        </method>
        <method type="void">
          <sel>unapplyMutableViewpointTraitForValue:</sel>
          <arg type="id">aValue</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="id">
          <sel>value</sel>
          <desc>
            <p>
              Returns the object value resulting from the
              viewpoint.
            </p>
          </desc>
        </method>
        <method type="id">
          <sel>valueForProperty:</sel>
          <arg type="NSString*">key</arg>
          <desc>
            <p>
              Returns a value bound to a property of the object
              <ref type="method" id="-value">
                -value
              </ref>
              .
            </p>
          </desc>
        </method>
      </protocol>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the ETViewpointMutation
        protocol
      </heading>
      <protocol name="ETViewpointMutation">
        <declared>ETViewpoint.h</declared>
        <desc>
          <p>
            @group Viewpoints @abstract Protocol to provide a
            viewpoint that simulates mutability for immutable
            objects.
          </p>
          <p>
            For each immutable object class, a distinct
            ETMutableObjectViewpoint subclass
            must exist.
          </p>
          <p>
            Immutable object class that wants to support
            editing or mutation through a
            ETMutableObjectViewpoint must
            implement this protocol.
          </p>
        </desc>
        <method type="Class" factory="yes">
          <sel>mutableViewpointClass</sel>
          <desc>
            <p>
              Returns the ETMutableObjectViewpoint subclass
              used to mutate the receiver instances.
            </p>
            <p>
              Must not return Nil.
            </p>
          </desc>
        </method>
      </protocol>
    </chapter>
  </body>
</gsdoc>
